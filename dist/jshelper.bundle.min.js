function remove(r) {
    var e = this.indexOf(r);
    this.splice(e, 1)
}
function removeAll() {
    for (var r = this; 0 != r.length;)r.shift();
    return this
}
var Enumerable = require("");
Array.prototype.asEnumerable = function () {
    var r = Enumerable.from(this);
    return r.remove = remove.bind(this), r.removeAll = removeAll.bind(this), r
}, window.isArray = function (r) {
    return "[object Array]" === Object.prototype.toString.call(r)
}, window.Guid = function () {
    return {
        newGuid: function () {
            return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function (r) {
                var e = 16 * Math.random() | 0, n = "x" == r ? e : 3 & e | 8;
                return n.toString(16)
            })
        }, isEmpty: function () {
            return !1
        }
    }
}(), String.prototype.format = String.prototype.f = function () {
    for (var r = this, e = arguments.length; e--;)r = r.replace(new RegExp("\\{" + e + "\\}", "gm"), arguments[e]);
    return r
}, window.getKeys = function (r) {
    var e = [];
    for (key in r)e.push(key);
    return e
}, window.isNumeric = function (r) {
    return r - 0 == r && (r + "").replace(/^\s+|\s+$/g, "").length > 0
};